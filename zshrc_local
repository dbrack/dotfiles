# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
ZSH_THEME="clean"

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git osx brew gitignore history-substring-search)

source $ZSH/oh-my-zsh.sh

# User configuration

# visual studio code hook
function code {
    if [[ $# = 0 ]]
    then
        open -a "Visual Studio Code"
    else
        local argPath="$1"
        [[ $1 = /* ]] && argPath="$1" || argPath="$PWD/${1#./}"
        open -a "Visual Studio Code" "$argPath"
    fi
}

## virtualenvwrapper
export WORKON_HOME=$HOME/.virtualenvs
export PROJECT_HOME=$HOME/Files/Projects
#source /System/Library/Frameworks/Python.framework/Versions/2.7/bin/virtualenvwrapper.sh
export PIP_VIRTUALENV_BASE=$WORKON_HOME
export PIP_RESPECT_VIRTUALENV=true

## Java Stuff
export JAVA_HOME=$(/usr/libexec/java_home -v 1.8)

function java_use() {
    export JAVA_HOME=$(/usr/libexec/java_home -v $1)
    export PATH=$JAVA_HOME/bin:$PATH
    java -version
}

## Custom PATH setup
export PATH=/Library/Frameworks/Python.framework/Versions/3.3/bin:/usr/local/share/npm/bin:/opt/X11/bin:$HOME/Library/Android/sdk/tools:$HOME/Library/Android/sdk/platform-tools:$JAVA_HOME/bin:$HOME/.rvm/bin:$HOME/.bin:/usr/local/sbin:$PATH

## Aliases
alias wserver="ssh -p 1337 db@dbr.me -i ~/.ssh/id_milky"
alias delpyc='find . \( -name "*.pyc" -o -name "*.pyo" \) -exec rm -v {} \;'
alias lockscreen='/System/Library/Frameworks/ScreenSaver.framework/Resources/ScreenSaverEngine.app/Contents/MacOS/ScreenSaverEngine'
alias update-django='cd /usr/local/django/trunk && sudo svn up && cd'
alias java_ls='/usr/libexec/java_home -V 2>&1 | grep -E "\d.\d.\d[,_]" | cut -d , -f 1 | colrm 1 4 | grep -v Home'

# git
alias st='git status'
alias bad='git bisect bad'
alias good='git bisect good'
alias push='git push origin HEAD'
alias add='git add -p'
alias gprune='git remote prune origin'
alias gbpurge='git branch --merged | grep -v "\*" | grep -v "master" | grep -v "develop" | xargs -n 1 git branch -d'
alias gbpurgeunsafe='git branch | grep -v "master" | grep -v "develop" | xargs git branch -D'

## Finnnova
# export IBNG_HOME='/Users/Domnik/Files/Projects/Work/Finnova/ibnextgen/IBNextGen'
# alias ibng='cd $IBNG_HOME'
# alias startPlay='ibng && activator "run 9600"'
# alias startSelenium='cd ~/Files/Projects/Work/Finnova/selenium-grid/standalone && ./standalone-osx.sh'
# alias startFrontend='ibng && cd ui && grunt dev:frontend --ui-debug'

#alias apireal="sed -i.bak 's/replayRecordedData=true/replayRecordedData=false/' $IBNG_HOME/conf/application/user.conf"
#alias apifake="sed -i.bak 's/replayRecordedData=false/replayRecordedData=true/' $IBNG_HOME/conf/application/user.conf"
## Proxy
# source ~/Files/Projects/Work/osx-proxy-config/proxy-config

## Flynt
export FLYNT_HOME='/Users/Dominik/Files/Projects/Work/Flynt'

# aliases
alias flynt='cd $FLYNT_HOME'
alias startFrontEnd='flynt && cd jaso-backoffice-ui && npm start'
alias runTests='flynt && cd jaso-backoffice-ui && ./node_modules/karma/bin/karma start --reporters spec,osx'
alias startJaso='flynt && cd jaso && sbt "testuiWithServices/runMain TestUi"'
alias flyntgit='git config push.default simple && git config user.name "Dominik Brack" && git config user.email dbr@scaling.ch && git config core.ignorecase false'

# exports
export SBT_OPTS="-Dsbt.override.build.repos=true -Djavax.net.ssl.keyStore=/Users/Dominik/certs/flynt/scaling.p12 -Djavax.net.ssl.keyStorePassword=MeIsc00l!$ -Djavax.net.ssl.keyStoreType=pkcs12 -Djavax.net.ssl.trustStore=/Users/Dominik/certs/flynt/cacerts.jks -Djavax.net.ssl.trustStorePassword=changeit -Djavax.net.ssl.trustStoreType=jks"

# The next line updates PATH for the Google Cloud SDK.
source '/Applications/google-cloud-sdk/path.zsh.inc'

# The next line enables shell command completion for gcloud.
source '/Applications/google-cloud-sdk/completion.zsh.inc'
eval $(thefuck --alias)
